from sage.all import *

# 给定的值
p = 14668080038311483271
C = matrix(GF(p), [
    [11315841881544731102, 2283439871732792326, 6800685968958241983, 6426158106328779372, 9681186993951502212],
    [4729583429936371197, 9934441408437898498, 12454838789798706101, 1137624354220162514, 8961427323294527914],
    [12212265161975165517, 8264257544674837561, 10531819068765930248, 4088354401871232602, 14653951889442072670],
    [6045978019175462652, 11202714988272207073, 13562937263226951112, 6648446245634067896, 13902820281072641413],
    [1046075193917103481, 3617988773170202613, 3590111338369894405, 2646640112163975771, 5966864698750134707]
])

D = matrix(GF(p), [
    [1785348659555163021, 3612773974290420260, 8587341808081935796, 4393730037042586815, 10490463205723658044],
    [10457678631610076741, 1645527195687648140, 13013316081830726847, 12925223531522879912, 5478687620744215372],
    [9878636900393157276, 13274969755872629366, 3231582918568068174, 7045188483430589163, 5126509884591016427],
    [4914941908205759200, 7480989013464904670, 5860406622199128154, 8016615177615097542, 13266674393818320551],
    [3005316032591310201, 6624508725257625760, 7972954954270186094, 5331046349070112118, 6127026494304272395]
])

# 使用离散对数来尝试找出k
# 由于e=0，最后一行应该有特殊性质
# 我们尝试使用矩阵的每个元素来求解k

def find_k():
    # 尝试用最后一行的元素
    base = int(C[4][0])
    target = int(D[4][0])
    # 计算离散对数
    start = 2**62
    for k in range(start, p):
        if k % 1000000 == 0:
            print(f"Trying k: {k}")
        if pow(base, k, p) == target:
            print(f"Found potential k: {k}")
            # 验证其他元素
            if all(pow(int(C[4][j]), k, p) == int(D[4][j]) for j in range(5)):
                return k
    return None

k = find_k()
if k is not None:
    print(f"\nFound key: {k}")
    # 打印key的二进制长度，方便后续处理
    print(f"Key bit length: {k.bit_length()}")
else:
    print("Key not found")
