from sage.all import *

# 给定的值
p = 9620154777088870694266521670168986508003314866222315790126552504304846236696183733266828489404860276326158191906907396234236947215466295418632056113826161
C = matrix(GF(p), [
    [7062910478232783138765983170626687981202937184255408287607971780139482616525215270216675887321965798418829038273232695370210503086491228434856538620699645,
     7096268905956462643320137667780334763649635657732499491108171622164208662688609295607684620630301031789132814209784948222802930089030287484015336757787801],
    [7341430053606172329602911405905754386729224669425325419124733847060694853483825396200841609125574923525535532184467150746385826443392039086079562905059808,
     2557244298856087555500538499542298526800377681966907502518580724165363620170968463050152602083665991230143669519866828587671059318627542153367879596260872]
])

# 根据特征值来求解
characteristic_poly = C.characteristic_polynomial()
eigenvalues = characteristic_poly.roots(ring=GF(p))

# eigenvalues 包含了 lambda1 和 lambda2
lambda1, lambda2 = [x[0] for x in eigenvalues]

# 将整数转换为bytes
def long_to_bytes(n):
    return n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')

# 转换回bytes
try:
    flag1 = long_to_bytes(int(lambda1))
    flag2 = long_to_bytes(int(lambda2))
    print(flag1 + flag2)
except ValueError as e:
    print(f"Error converting values: {e}")
    print(f"lambda1: {lambda1}")
    print(f"lambda2: {lambda2}")


LILCTF{It_w4s_the_be5t_of_times_1t_wa5_the_w0rst_of_t1me5}